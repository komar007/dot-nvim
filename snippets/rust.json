{
  "modtest": {
    "prefix": "modtest",
    "body": [
      "#[cfg(test)]",
      "mod test {",
      "    #[test]",
      "    fn ${1:name}() {",
      "        ${2:todo!();}",
      "    }",
      "}"
    ],
    "description": "#[cfg(test)]\nmod test {...}"
  },
  "test": {
    "prefix": "test",
    "body": [
      "#[test]",
      "fn ${1:name}() {",
      "    ${2:todo!();}",
      "}"
    ],
    "description": "#[test]"
  },
  "thiserror": {
    "prefix": "thiserror",
    "body": [
      "#[derive(thiserror::Error, Debug)]",
      "enum ${1:name}Error {",
      "    #[error(\"${3:description}\")]",
      "    ${2:variant},",
      "    ${4}",
      "}"
    ],
    "description": "thiserror-style error enum"
  },
  "error": {
    "prefix": "error",
    "body": [
      "#[error(\"${2:description}\")]",
      "${1:variant},"
    ],
    "description": "thiserror-style error variant"
  },
  "grpcfun": {
    "prefix": "grpcfun",
    "body": [
      "async fn ${1:rpc}(",
      "    &self,",
      "    request: Request<${1/(.*)/${1:/pascalcase}/}Request>,",
      ") -> Result<Response<${1/(.*)/${1:/pascalcase}/}Response>, Status> {",
      "    ${2:todo!()}",
      "}"
    ],
    "description": "gRPC tonic function implementation"
  }
}
